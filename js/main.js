!function(n){var c={};function t(e){if(c[e])return c[e].exports;var l=c[e]={i:e,l:!1,exports:{}};return n[e].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=n,t.c=c,t.d=function(n,c,e){t.o(n,c)||Object.defineProperty(n,c,{enumerable:!0,get:e})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,c){if(1&c&&(n=t(n)),8&c)return n;if(4&c&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(t.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&c&&"string"!=typeof n)for(var l in n)t.d(e,l,function(c){return n[c]}.bind(null,l));return e},t.n=function(n){var c=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(c,"a",c),c},t.o=function(n,c){return Object.prototype.hasOwnProperty.call(n,c)},t.p="",t(t.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\n// service worker registration - remove if you\'re not going to use it\r\n\r\nif (\'serviceWorker\' in navigator) {\r\n  window.addEventListener(\'load\', function() {\r\n    navigator.serviceWorker.register(\'serviceworker.js\').then(function(registration) {\r\n      // Registration was successful\r\n      console.log(\'ServiceWorker registration successful with scope: \', registration.scope);\r\n    }, function(err) {\r\n      // registration failed :(\r\n      console.log(\'ServiceWorker registration failed: \', err);\r\n    });\r\n  });\r\n}\r\n\r\n// place your code below\r\nconst tableBody = document.querySelector(".table__body--js");\r\nlet todayDate = new Date();\r\nlet lastMonthDate = newDate(todayDate);\r\n\r\n\r\nconst totalIncome = (incomes) => incomes.reduce((acc,income) => acc + income);\r\n\r\n//this function return year-month date(getYearAndMonth)\r\nfunction newDate(todayDate) {\r\n  todayDate.setDate(1);\r\n  todayDate.setMonth(todayDate.getMonth() - 1);\r\n  return new Date(todayDate).toISOString().slice(0,7);\r\n}\r\n\r\nfunction lastMonthIncomeDate(incomes) {\r\n  let lastMonth = incomes.filter(income => {\r\n    const incomeDate = income.date.slice(0,7);\r\n    if (incomeDate === lastMonthDate) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  })\r\n  return lastMonth;\r\n};\r\n\r\nfunction lastMonthIncomes(incomes) {\r\n  let lastMonth = lastMonthIncomeDate(incomes);\r\n  lastMonth = lastMonth.map(el => el.value);\r\n  if (lastMonth.length > 0) {\r\n    lastMonth = lastMonth.reduce((a, b) => {\r\n      return parseFloat(a) + parseFloat(b)\r\n    })\r\n  } \r\n  else {\r\n    lastMonth = 0;\r\n  }\r\n  return lastMonth;\r\n}\r\n\r\n\r\nasync function companny (comp, companiesArray) {\r\n  let companyIncomes = await fetch(`https://recruitment.hal.skygate.io/incomes/${comp.id}`);\r\n  companyIncomes = await companyIncomes.json();\r\n  companyIncomes = companyIncomes.incomes;\r\n  const companyIncome = companyIncomes.map(comp => parseFloat(comp.value));\r\n\r\n  const total = "" + Number(totalIncome(companyIncome)).toFixed(2);\r\n  const average = "" + Number(total/(companyIncome.length + 1)).toFixed(2);\r\n  const monthIncome = "" + Number(lastMonthIncomes(companyIncomes)).toFixed(2);\r\n\r\n  const companyObj = {\r\n    ...comp, \r\n    "totalIncome" : total, \r\n    "averageIncome" : average, \r\n    monthIncome\r\n  };\r\n\r\n  companiesArray.push(companyObj);\r\n}\r\n\r\nasync function getCompaniesList() {\r\n  let company = await fetch("https://recruitment.hal.skygate.io/companies");\r\n  company = await company.json();\r\n  const companiesArray = [];\r\n  \r\n  await Promise.all(company.map(comp => {\r\n    return companny(comp, companiesArray);\r\n  }));\r\n\r\n  \r\n  \r\n  return companiesArray;\r\n  \r\n  \r\n \r\n}\r\n\r\nasync function renderTable() {\r\n  const companiesList = await getCompaniesList();\r\n  let tableInnerHtml = "";\r\n\r\n  for (const company of companiesList) {\r\n    const {id, name, city, totalIncome, averageIncome, monthIncome} = company;\r\n    tableInnerHtml += `\r\n       <tr>\r\n          <td>${id}</td>\r\n          <td>${name}</td>\r\n          <td>${city}</td>\r\n          <td>${totalIncome}</td>\r\n          <td>${averageIncome}</td>\r\n          <td>${monthIncome}</td>\r\n        </tr>\r\n      `;\r\n  }\r\n\r\n  tableBody.innerHTML = tableInnerHtml;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//TESTING FEW SOLUTION OF PAGINATION\r\n//getCellValue compare innerText and textContent if the table row is empty then it\'s pull data form textContent\r\nconst getCellValue = (tableRow, columnIndex) => (tableRow.children[columnIndex].innerText || tableRow.children[columnIndex].textContent);\r\n\r\nconst comparer = (columnIndex, sortAscending) => (a, b) => {\r\n  const v1 = getCellValue(sortAscending ? a : b, columnIndex);\r\n  const v2 = getCellValue(sortAscending ? b : a, columnIndex);\r\n  if (v1 === "" || v2 === "" || isNaN(v1) || isNaN(v2)) {\r\n    return v1.toString().localeCompare(v2);\r\n  }\r\n  return v1 - v2;\r\n};\r\n\r\nconst checkValue = (text) => (rows) => {\r\n  return Array.from(rows.children).some( (row) => {\r\n    const fieldValue = row.innerText.toLowerCase();\r\n    return (fieldValue.substring(0, text.length) === text);\r\n  });\r\n};\r\n    \r\n\r\n\r\nrenderTable().then( () => {\r\n\r\n  //Sorting table\r\n\r\n  const headers = Array.from(document.querySelectorAll(".header"));\r\n  const wholeTable = document.querySelector("table");\r\n  const tableQuery = wholeTable.querySelector(".table__body--js");\r\n  const tableRows = Array.from(wholeTable.querySelector("tbody").rows);\r\n\r\n  let ascOrDsc = false;\r\n\r\n  headers.forEach(th =>\r\n    th.addEventListener("click", e => {\r\n      ascOrDsc = !ascOrDsc;\r\n      const indexOfTh = Array.from(th.parentNode.children).indexOf(th);\r\n      tableRows\r\n        .sort(comparer(indexOfTh, ascOrDsc))\r\n        .forEach(tr => tableQuery.appendChild(tr));\r\n    })\r\n  );\r\n\r\n  //Search in table\r\n  \r\n  const inputQuery = document.querySelector(".input__field--js");\r\n  \r\n  \r\n  \r\n\r\n  inputQuery.addEventListener("keyup", e => {\r\n    const text = inputQuery.value.toLowerCase();\r\n    const tableQ = wholeTable.querySelector("tbody");\r\n    const tableBody = document.createElement(\'tbody\');\r\n    console.log(text);\r\n    tableRows.filter(checkValue(text)).forEach(row => {\r\n      tableBody.appendChild(row);\r\n    });\r\n    \r\n    \r\n\r\n    \r\n    wholeTable.replaceChild(tableBody, tableQ);\r\n    \r\n    \r\n  })\r\n  \r\n})\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);